@page "/spotlights/details"
@using Microsoft.EntityFrameworkCore
@using PetAdoptionManagement.Components.Domain
@inject IDbContextFactory<PetAdoptionManagement.Data.PetAdoptionManagementContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Spotlight Details</PageTitle>

<div class="container mt-5" style="font-family: 'Poppins', sans-serif; background: #fff8e1; padding: 2rem; border-radius: 15px; box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);">
    <!-- Back to Spotlights List Button -->
    <a class="btn btn-outline-primary mb-4" href="/spotlights" style="border-radius: 25px;">Back to List</a>

    <!-- Page Title -->
    <h1 class="mb-3" style="color: #D1913C;">Spotlight Details</h1>

    @if (spotlight is null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <!-- Spotlight Details -->
        <div class="card shadow-sm" style="background: white; border-radius: 15px; padding: 1.5rem;">
            <h4 class="text-center mb-4" style="color: #D1913C;">Spotlight Information</h4>
            <dl class="row">
                <dt class="col-sm-3">Start Date</dt>
                <dd class="col-sm-9">@spotlight.StartDate.ToString("yyyy-MM-dd")</dd>
            </dl>
            <dl class="row">
                <dt class="col-sm-3">Reason</dt>
                <dd class="col-sm-9">@spotlight.Reason</dd>
            </dl>
            <dl class="row">
                <dt class="col-sm-3">Status</dt>
                <dd class="col-sm-9">@spotlight.Status</dd>
            </dl>
            <dl class="row">
                <dt class="col-sm-3">Pet ID</dt>
                <dd class="col-sm-9">@spotlight.PetId</dd>
            </dl>

            <!-- Edit and Back Buttons -->
            <div class="text-center mt-4">
                <a class="btn btn-success w-100" href="@($"/spotlights/edit?id={spotlight.Id}")" style="border-radius: 25px;">Edit Spotlight</a>
                <a class="btn btn-outline-primary w-100 mt-2" href="/spotlights" style="border-radius: 25px;">Back to List</a>
            </div>
        </div>
    }
</div>

@code {
    private Spotlight? spotlight;

    [SupplyParameterFromQuery]
    private int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        spotlight = await context.Spotlight.FirstOrDefaultAsync(m => m.Id == Id);

        if (spotlight is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
