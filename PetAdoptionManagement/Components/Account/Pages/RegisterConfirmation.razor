@page "/Account/RegisterConfirmation"

@using System.Text
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.WebUtilities
@using PetAdoptionManagement.Data

@inject UserManager<PetAdoptionManagementUser> UserManager
@inject IEmailSender<PetAdoptionManagementUser> EmailSender
@inject NavigationManager NavigationManager
@inject IdentityRedirectManager RedirectManager

<PageTitle>Register Confirmation</PageTitle>

<div class="container-fluid p-0"
     style="font-family: 'Poppins', sans-serif;
            background-color: #fff8e1;
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 50px;">

    <div class="container" style="max-width: 600px; width: 100%;">
        <div class="card shadow-lg" style="border-radius: 15px; background: #fff8e1; padding: 2rem;">
            <h1 class="text-center" style="color: #D1913C;">Confirm Your Registration</h1>
            <p class="text-center text-muted">
                Thank you for signing up! Please check your email to confirm your account.
            </p>

            @if (emailConfirmationLink is not null)
            {
                <div class="alert alert-info text-center" style="border-radius: 15px; padding: 1rem;">
                    <strong>Note:</strong> This app does not currently have a real email sender configured. Use the link below to confirm your account:
                    <div class="mt-3">
                        <a href="@emailConfirmationLink" class="btn btn-primary" style="border-radius: 25px;">Click Here to Confirm Your Account</a>
                    </div>
                </div>
            }
            else
            {
                <div class="alert alert-success text-center" style="border-radius: 15px; padding: 1rem;">
                    A confirmation link has been sent to your email. Please check your inbox.
                </div>
            }

            @if (!string.IsNullOrEmpty(statusMessage))
            {
                <div class="alert alert-danger text-center mt-3" style="border-radius: 15px; padding: 1rem;">
                    <strong>Error:</strong> @statusMessage
                </div>
            }

            <div class="text-center mt-4">
                <a href="/" class="btn btn-outline-secondary" style="border-radius: 25px;">Back to Home</a>
            </div>
        </div>
    </div>
</div>

@code {
    private string? emailConfirmationLink;
    private string? statusMessage;

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    [SupplyParameterFromQuery]
    private string? Email { get; set; }

    [SupplyParameterFromQuery]
    private string? ReturnUrl { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (Email is null)
        {
            RedirectManager.RedirectTo("");
        }

        var user = await UserManager.FindByEmailAsync(Email);
        if (user is null)
        {
            HttpContext.Response.StatusCode = StatusCodes.Status404NotFound;
            statusMessage = "Error finding user for unspecified email";
        }
        else if (EmailSender is IdentityNoOpEmailSender)
        {
            // Once you add a real email sender, you should remove this code that lets you confirm the account
            var userId = await UserManager.GetUserIdAsync(user);
            var code = await UserManager.GenerateEmailConfirmationTokenAsync(user);
            code = WebEncoders.Base64UrlEncode(Encoding.UTF8.GetBytes(code));
            emailConfirmationLink = NavigationManager.GetUriWithQueryParameters(
                NavigationManager.ToAbsoluteUri("Account/ConfirmEmail").AbsoluteUri,
                new Dictionary<string, object?> { ["userId"] = userId, ["code"] = code, ["returnUrl"] = ReturnUrl });
        }
    }
}
